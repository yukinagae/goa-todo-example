// Code generated by goa v3.0.4, DO NOT EDIT.
//
// todo HTTP client CLI support package
//
// Command:
// $ goa gen todo/design

package client

import (
	"encoding/json"
	"fmt"
	todo "todo/gen/todo"
)

// BuildGetPayload builds the payload for the todo get endpoint from CLI flags.
func BuildGetPayload(todoGetID string) (*todo.GetPayload, error) {
	var id string
	{
		id = todoGetID
	}
	payload := &todo.GetPayload{
		ID: id,
	}
	return payload, nil
}

// BuildAddPayload builds the payload for the todo add endpoint from CLI flags.
func BuildAddPayload(todoAddBody string) (*todo.AddPayload, error) {
	var err error
	var body AddRequestBody
	{
		err = json.Unmarshal([]byte(todoAddBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"id\": \"Fugiat numquam distinctio.\",\n      \"task\": \"Quasi facere.\"\n   }'")
		}
	}
	v := &todo.AddPayload{
		ID:   body.ID,
		Task: body.Task,
	}
	return v, nil
}

// BuildRemovePayload builds the payload for the todo remove endpoint from CLI
// flags.
func BuildRemovePayload(todoRemoveID string) (*todo.RemovePayload, error) {
	var id string
	{
		id = todoRemoveID
	}
	payload := &todo.RemovePayload{
		ID: id,
	}
	return payload, nil
}
