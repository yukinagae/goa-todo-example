// Code generated by goa v3.0.4, DO NOT EDIT.
//
// todo gRPC client types
//
// Command:
// $ goa gen todo/design

package client

import (
	todopb "todo/gen/grpc/todo/pb"
	todo "todo/gen/todo"
	todoviews "todo/gen/todo/views"
)

// NewGetRequest builds the gRPC request type from the payload of the "get"
// endpoint of the "todo" service.
func NewGetRequest(payload *todo.GetPayload) *todopb.GetRequest {
	message := &todopb.GetRequest{
		Id: payload.ID,
	}
	return message
}

// NewGetResult builds the result type of the "get" endpoint of the "todo"
// service from the gRPC response type.
func NewGetResult(message *todopb.GetResponse) *todoviews.TodoView {
	result := &todoviews.TodoView{
		ID:   &message.Id,
		Task: &message.Task,
	}
	return result
}

// NewListRequest builds the gRPC request type from the payload of the "list"
// endpoint of the "todo" service.
func NewListRequest() *todopb.ListRequest {
	message := &todopb.ListRequest{}
	return message
}

// NewListResult builds the result type of the "list" endpoint of the "todo"
// service from the gRPC response type.
func NewListResult(message *todopb.TodoCollection) todoviews.TodoCollectionView {
	result := make([]*todoviews.TodoView, len(message.Field))
	for i, val := range message.Field {
		result[i] = &todoviews.TodoView{
			ID:   &val.Id,
			Task: &val.Task,
		}
	}
	return result
}

// NewAddRequest builds the gRPC request type from the payload of the "add"
// endpoint of the "todo" service.
func NewAddRequest(payload *todo.AddPayload) *todopb.AddRequest {
	message := &todopb.AddRequest{
		Id:   payload.ID,
		Task: payload.Task,
	}
	return message
}

// NewAddResult builds the result type of the "add" endpoint of the "todo"
// service from the gRPC response type.
func NewAddResult(message *todopb.AddResponse) string {
	result := message.Field
	return result
}

// NewRemoveRequest builds the gRPC request type from the payload of the
// "remove" endpoint of the "todo" service.
func NewRemoveRequest(payload *todo.RemovePayload) *todopb.RemoveRequest {
	message := &todopb.RemoveRequest{
		Id: payload.ID,
	}
	return message
}
